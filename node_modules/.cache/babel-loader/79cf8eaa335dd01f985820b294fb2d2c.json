{"ast":null,"code":"var _jsxFileName = \"/Users/wdelacruz/project_2021/oxfam-fe/src/app/auth/AuthGuard.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport useAuth from 'app/hooks/useAuth';\nimport { flat } from 'app/utils/utils';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport AllPages from '../routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar userHasPermission = function userHasPermission(pathname, user, routes) {\n  if (!user) {\n    return false;\n  }\n\n  console.log(pathname + ' PATH NAME');\n  console.log(JSON.stringify(user) + ' USER');\n  var matched = routes.find(function (r) {\n    return r.path === pathname;\n  });\n  var authenticated = matched && matched.auth && matched.auth.length ? matched.auth.includes(user.role) : true;\n  return authenticated;\n};\n\nvar AuthGuard = function AuthGuard(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useAuth = useAuth(),\n      isAuthenticated = _useAuth.isAuthenticated,\n      user = _useAuth.user;\n\n  var _useLocation = useLocation(),\n      pathname = _useLocation.pathname;\n\n  var routes = flat(AllPages);\n  console.log(routes + ' ROUTES');\n  console.log(userHasPermission + ' User Permission');\n  var hasPermission = userHasPermission(pathname, user, routes); //   let authenticated = isAuthenticated && hasPermission;\n\n  console.log(hasPermission + ' Permission'); // // IF YOU NEED ROLE BASED AUTHENTICATION,\n  // // UNCOMMENT ABOVE LINES\n  // // AND COMMENT OUT BELOW authenticated VARIABLE\n\n  var authenticated = isAuthenticated;\n  console.log(authenticated + ' Is Authenticated');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: authenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/session/signin\",\n      state: {\n        from: pathname\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, _this)\n  }, void 0, false);\n};\n\n_s(AuthGuard, \"Lv/npDCs8NYAiNXtVN30MhlTHtA=\", false, function () {\n  return [useAuth, useLocation];\n});\n\n_c = AuthGuard;\nexport default AuthGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"names":["useAuth","flat","Navigate","useLocation","AllPages","userHasPermission","pathname","user","routes","console","log","JSON","stringify","matched","find","r","path","authenticated","auth","length","includes","role","AuthGuard","children","isAuthenticated","hasPermission","from"],"sources":["/Users/wdelacruz/project_2021/oxfam-fe/src/app/auth/AuthGuard.jsx"],"sourcesContent":["import useAuth from 'app/hooks/useAuth';\r\nimport { flat } from 'app/utils/utils';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport AllPages from '../routes';\r\n\r\nconst userHasPermission = (pathname, user, routes) => {\r\n  if (!user) {\r\n    return false;\r\n  }\r\n\r\n  console.log(pathname + ' PATH NAME');\r\n  console.log(JSON.stringify(user) + ' USER');\r\n\r\n  const matched = routes.find((r) => r.path === pathname);\r\n\r\n  const authenticated =\r\n    matched && matched.auth && matched.auth.length ? matched.auth.includes(user.role) : true;\r\n  return authenticated;\r\n};\r\n\r\nconst AuthGuard = ({ children }) => {\r\n  let { isAuthenticated, user } = useAuth();\r\n  const { pathname } = useLocation();\r\n\r\n  const routes = flat(AllPages);\r\n\r\n  console.log(routes + ' ROUTES');\r\n  console.log(userHasPermission + ' User Permission');\r\n  const hasPermission = userHasPermission(pathname, user, routes);\r\n  //   let authenticated = isAuthenticated && hasPermission;\r\n  console.log(hasPermission + ' Permission');\r\n  // // IF YOU NEED ROLE BASED AUTHENTICATION,\r\n  // // UNCOMMENT ABOVE LINES\r\n  // // AND COMMENT OUT BELOW authenticated VARIABLE\r\n\r\n  let authenticated = isAuthenticated;\r\n  console.log(authenticated + ' Is Authenticated');\r\n\r\n  return (\r\n    <>\r\n      {authenticated ? (\r\n        children\r\n      ) : (\r\n        <Navigate replace to=\"/session/signin\" state={{ from: pathname }} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthGuard;\r\n"],"mappings":";;;;AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,OAAOC,QAAP,MAAqB,WAArB;;;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAAWC,IAAX,EAAiBC,MAAjB,EAA4B;EACpD,IAAI,CAACD,IAAL,EAAW;IACT,OAAO,KAAP;EACD;;EAEDE,OAAO,CAACC,GAAR,CAAYJ,QAAQ,GAAG,YAAvB;EACAG,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeL,IAAf,IAAuB,OAAnC;EAEA,IAAMM,OAAO,GAAGL,MAAM,CAACM,IAAP,CAAY,UAACC,CAAD;IAAA,OAAOA,CAAC,CAACC,IAAF,KAAWV,QAAlB;EAAA,CAAZ,CAAhB;EAEA,IAAMW,aAAa,GACjBJ,OAAO,IAAIA,OAAO,CAACK,IAAnB,IAA2BL,OAAO,CAACK,IAAR,CAAaC,MAAxC,GAAiDN,OAAO,CAACK,IAAR,CAAaE,QAAb,CAAsBb,IAAI,CAACc,IAA3B,CAAjD,GAAoF,IADtF;EAEA,OAAOJ,aAAP;AACD,CAbD;;AAeA,IAAMK,SAAS,GAAG,SAAZA,SAAY,OAAkB;EAAA;;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAClC,eAAgCvB,OAAO,EAAvC;EAAA,IAAMwB,eAAN,YAAMA,eAAN;EAAA,IAAuBjB,IAAvB,YAAuBA,IAAvB;;EACA,mBAAqBJ,WAAW,EAAhC;EAAA,IAAQG,QAAR,gBAAQA,QAAR;;EAEA,IAAME,MAAM,GAAGP,IAAI,CAACG,QAAD,CAAnB;EAEAK,OAAO,CAACC,GAAR,CAAYF,MAAM,GAAG,SAArB;EACAC,OAAO,CAACC,GAAR,CAAYL,iBAAiB,GAAG,kBAAhC;EACA,IAAMoB,aAAa,GAAGpB,iBAAiB,CAACC,QAAD,EAAWC,IAAX,EAAiBC,MAAjB,CAAvC,CARkC,CASlC;;EACAC,OAAO,CAACC,GAAR,CAAYe,aAAa,GAAG,aAA5B,EAVkC,CAWlC;EACA;EACA;;EAEA,IAAIR,aAAa,GAAGO,eAApB;EACAf,OAAO,CAACC,GAAR,CAAYO,aAAa,GAAG,mBAA5B;EAEA,oBACE;IAAA,UACGA,aAAa,GACZM,QADY,gBAGZ,QAAC,QAAD;MAAU,OAAO,MAAjB;MAAkB,EAAE,EAAC,iBAArB;MAAuC,KAAK,EAAE;QAAEG,IAAI,EAAEpB;MAAR;IAA9C;MAAA;MAAA;MAAA;IAAA;EAJJ,iBADF;AASD,CA3BD;;GAAMgB,S;UAC4BtB,O,EACXG,W;;;KAFjBmB,S;AA6BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}