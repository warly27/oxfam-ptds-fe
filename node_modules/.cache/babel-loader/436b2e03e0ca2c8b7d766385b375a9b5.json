{"ast":null,"code":"import useAuth from'app/hooks/useAuth';// import { flat } from 'app/utils/utils';\nimport{Navigate,useLocation}from'react-router-dom';// import AllPages from '../routes';\n// const userHasPermission = (pathname, user, routes) => {\n//   if (!user) {\n//     return false;\n//   }\n//   const matched = routes.find((r) => r.path === pathname);\n//   const authenticated =\n//     matched && matched.auth && matched.auth.length ? matched.auth.includes(user.role) : true;\n//   return authenticated;\n// };\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AuthGuard=function AuthGuard(_ref){var children=_ref.children;var _useAuth=useAuth(),isAuthenticated=_useAuth.isAuthenticated;var _useLocation=useLocation(),pathname=_useLocation.pathname;//   const routes = flat(AllPages);\n//   const hasPermission = userHasPermission(pathname, user, routes);\n//   let authenticated = isAuthenticated && hasPermission;\n// // IF YOU NEED ROLE BASED AUTHENTICATION,\n// // UNCOMMENT ABOVE LINES\n// // AND COMMENT OUT BELOW authenticated VARIABLE\nvar authenticated=isAuthenticated;return/*#__PURE__*/_jsx(_Fragment,{children:authenticated?children:/*#__PURE__*/_jsx(Navigate,{replace:true,to:\"/session/signin\",state:{from:pathname}})});};export default AuthGuard;","map":null,"metadata":{},"sourceType":"module"}