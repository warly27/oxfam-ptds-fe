{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar views = {\n  hours: '小时',\n  minutes: '分钟',\n  seconds: '秒'\n}; // This object is not Partial<PickersLocaleText> because it is the default values\n\nvar zhCNPickers = {\n  // Calendar navigation\n  previousMonth: '上个月',\n  nextMonth: '下个月',\n  // View navigation\n  openPreviousView: '前一个视图',\n  openNextView: '下一个视图',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? '年视图已打开，切换为日历视图' : '日历视图已打开，切换为年视图';\n  },\n  // DateRange placeholders\n  start: '开始',\n  end: '结束',\n  // Action bar\n  cancelButtonLabel: '取消',\n  clearButtonLabel: '清除',\n  okButtonLabel: '确认',\n  todayButtonLabel: '今天',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Select \".concat(views[view], \". \").concat(time === null ? '未选择时间' : \"\\u5DF2\\u9009\\u62E9\".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \"\\u5C0F\\u65F6\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \"\\u5206\\u949F\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \"\\u79D2\");\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"\\u9009\\u62E9\\u65E5\\u671F\\uFF0C\\u5DF2\\u9009\\u62E9\".concat(utils.format(utils.date(rawValue), 'fullDate')) : '选择日期';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"\\u9009\\u62E9\\u65F6\\u95F4\\uFF0C\\u5DF2\\u9009\\u62E9\".concat(utils.format(utils.date(rawValue), 'fullTime')) : '选择时间';\n  },\n  // Table labels\n  timeTableLabel: '选择时间',\n  dateTableLabel: '选择日期'\n};\nexport var zhCN = getPickersLocalization(zhCNPickers);","map":{"version":3,"names":["getPickersLocalization","views","hours","minutes","seconds","zhCNPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","zhCN"],"sources":["/Users/wdelacruz/project_2021/matx-react/node_modules/@mui/x-date-pickers/locales/zhCN.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: '小时',\n  minutes: '分钟',\n  seconds: '秒'\n}; // This object is not Partial<PickersLocaleText> because it is the default values\n\nconst zhCNPickers = {\n  // Calendar navigation\n  previousMonth: '上个月',\n  nextMonth: '下个月',\n  // View navigation\n  openPreviousView: '前一个视图',\n  openNextView: '下一个视图',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? '年视图已打开，切换为日历视图' : '日历视图已打开，切换为年视图',\n  // DateRange placeholders\n  start: '开始',\n  end: '结束',\n  // Action bar\n  cancelButtonLabel: '取消',\n  clearButtonLabel: '清除',\n  okButtonLabel: '确认',\n  todayButtonLabel: '今天',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${views[view]}. ${time === null ? '未选择时间' : `已选择${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours}小时`,\n  minutesClockNumberText: minutes => `${minutes}分钟`,\n  secondsClockNumberText: seconds => `${seconds}秒`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `选择日期，已选择${utils.format(utils.date(rawValue), 'fullDate')}` : '选择日期',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `选择时间，已选择${utils.format(utils.date(rawValue), 'fullTime')}` : '选择时间',\n  // Table labels\n  timeTableLabel: '选择时间',\n  dateTableLabel: '选择日期'\n};\nexport const zhCN = getPickersLocalization(zhCNPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC;AACA,IAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,IADK;EAEZC,OAAO,EAAE,IAFG;EAGZC,OAAO,EAAE;AAHG,CAAd,C,CAIG;;AAEH,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,KAFG;EAGlBC,SAAS,EAAE,KAHO;EAIlB;EACAC,gBAAgB,EAAE,OALA;EAMlBC,YAAY,EAAE,OANI;EAOlBC,oCAAoC,EAAE,8CAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,MAAT,GAAkB,gBAAlB,GAAqC,gBAAzC;EAAA,CAPxB;EAQlB;EACAC,KAAK,EAAE,IATW;EAUlBC,GAAG,EAAE,IAVa;EAWlB;EACAC,iBAAiB,EAAE,IAZD;EAalBC,gBAAgB,EAAE,IAbA;EAclBC,aAAa,EAAE,IAdG;EAelBC,gBAAgB,EAAE,IAfA;EAgBlB;EACAC,cAAc,EAAE,wBAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb;IAAA,wBAAmCnB,KAAK,CAACU,IAAD,CAAxC,eAAmDQ,IAAI,KAAK,IAAT,GAAgB,OAAhB,+BAAgCC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAhC,CAAnD;EAAA,CAjBE;EAkBlBG,oBAAoB,EAAE,8BAAApB,KAAK;IAAA,iBAAOA,KAAP;EAAA,CAlBT;EAmBlBqB,sBAAsB,EAAE,gCAAApB,OAAO;IAAA,iBAAOA,OAAP;EAAA,CAnBb;EAoBlBqB,sBAAsB,EAAE,gCAAApB,OAAO;IAAA,iBAAOA,OAAP;EAAA,CApBb;EAqBlB;EACAqB,sBAAsB,EAAE,gCAACC,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,6DAA6DC,KAAK,CAACN,MAAN,CAAaM,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA7D,IAAgH,MAArI;EAAA,CAtBN;EAuBlBI,sBAAsB,EAAE,gCAACJ,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,6DAA6DC,KAAK,CAACN,MAAN,CAAaM,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA7D,IAAgH,MAArI;EAAA,CAvBN;EAwBlB;EACAK,cAAc,EAAE,MAzBE;EA0BlBC,cAAc,EAAE;AA1BE,CAApB;AA4BA,OAAO,IAAMC,IAAI,GAAGjC,sBAAsB,CAACK,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}