{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos'\n}; // This object is not Partial<PickersLocaleText> because it is the default values\n\nvar esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año';\n  },\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpia',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Seleccione \".concat(views[view], \". \").concat(time === null ? 'Sin tiempo seleccionado' : \"El tiempo seleccionado es \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" horas\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" minutos\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" segundos\");\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Elige la fecha, la fecha elegida es \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Elige la fecha';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Elige la hora, la hora elegido es \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Elige la hora';\n  },\n  // Table labels\n  timeTableLabel: 'elige la fecha',\n  dateTableLabel: 'elige la hora'\n};\nexport var esES = getPickersLocalization(esESPickers);","map":{"version":3,"names":["getPickersLocalization","views","hours","minutes","seconds","esESPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","esES"],"sources":["/Users/wdelacruz/project_2021/matx-react/node_modules/@mui/x-date-pickers/locales/esES.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos'\n}; // This object is not Partial<PickersLocaleText> because it is the default values\n\nconst esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año',\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpia',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Seleccione ${views[view]}. ${time === null ? 'Sin tiempo seleccionado' : `El tiempo seleccionado es ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} horas`,\n  minutesClockNumberText: minutes => `${minutes} minutos`,\n  secondsClockNumberText: seconds => `${seconds} segundos`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Elige la fecha, la fecha elegida es ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Elige la fecha',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Elige la hora, la hora elegido es ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Elige la hora',\n  // Table labels\n  timeTableLabel: 'elige la fecha',\n  dateTableLabel: 'elige la hora'\n};\nexport const esES = getPickersLocalization(esESPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC;AACA,IAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,WADK;EAEZC,OAAO,EAAE,aAFG;EAGZC,OAAO,EAAE;AAHG,CAAd,C,CAIG;;AAEH,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,YAFG;EAGlBC,SAAS,EAAE,aAHO;EAIlB;EACAC,gBAAgB,EAAE,uBALA;EAMlBC,YAAY,EAAE,0BANI;EAOlBC,oCAAoC,EAAE,8CAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,MAAT,GAAkB,gEAAlB,GAAqF,gEAAzF;EAAA,CAPxB;EAQlB;EACAC,KAAK,EAAE,SATW;EAUlBC,GAAG,EAAE,UAVa;EAWlB;EACAC,iBAAiB,EAAE,UAZD;EAalBC,gBAAgB,EAAE,QAbA;EAclBC,aAAa,EAAE,IAdG;EAelBC,gBAAgB,EAAE,KAfA;EAgBlB;EACAC,cAAc,EAAE,wBAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb;IAAA,4BAAuCnB,KAAK,CAACU,IAAD,CAA5C,eAAuDQ,IAAI,KAAK,IAAT,GAAgB,yBAAhB,uCAAyEC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAzE,CAAvD;EAAA,CAjBE;EAkBlBG,oBAAoB,EAAE,8BAAApB,KAAK;IAAA,iBAAOA,KAAP;EAAA,CAlBT;EAmBlBqB,sBAAsB,EAAE,gCAAApB,OAAO;IAAA,iBAAOA,OAAP;EAAA,CAnBb;EAoBlBqB,sBAAsB,EAAE,gCAAApB,OAAO;IAAA,iBAAOA,OAAP;EAAA,CApBb;EAqBlB;EACAqB,sBAAsB,EAAE,gCAACC,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,iDAAyFC,KAAK,CAACN,MAAN,CAAaM,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAAzF,IAA4I,gBAAjK;EAAA,CAtBN;EAuBlBI,sBAAsB,EAAE,gCAACJ,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,+CAAuFC,KAAK,CAACN,MAAN,CAAaM,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAAvF,IAA0I,eAA/J;EAAA,CAvBN;EAwBlB;EACAK,cAAc,EAAE,gBAzBE;EA0BlBC,cAAc,EAAE;AA1BE,CAApB;AA4BA,OAAO,IAAMC,IAAI,GAAGjC,sBAAsB,CAACK,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}