{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar svSEPickers = {\n  // Calendar navigation\n  previousMonth: 'Föregående månad',\n  nextMonth: 'Nästa månad',\n  // View navigation\n  openPreviousView: 'öppna föregående vy',\n  openNextView: 'öppna nästa vy',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'årsvyn är öppen, byt till kalendervy' : 'kalendervyn är öppen, byt till årsvy';\n  },\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Slut',\n  // Action bar\n  cancelButtonLabel: 'Avbryt',\n  clearButtonLabel: 'Rensa',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Idag',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Select \".concat(view, \". \").concat(time === null ? 'Ingen tid vald' : \"Vald tid \\xE4r \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" timmar\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" minuter\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" sekunder\");\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"V\\xE4lj datum, valt datum \\xE4r \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Välj datum';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"V\\xE4lj tid, vald tid \\xE4r \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Välj tid';\n  },\n  // Table labels\n  timeTableLabel: 'välj tid',\n  dateTableLabel: 'välj datum'\n};\nexport var svSE = getPickersLocalization(svSEPickers);","map":{"version":3,"names":["getPickersLocalization","svSEPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","svSE"],"sources":["/Users/wdelacruz/project_2021/matx-react/node_modules/@mui/x-date-pickers/locales/svSE.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst svSEPickers = {\n  // Calendar navigation\n  previousMonth: 'Föregående månad',\n  nextMonth: 'Nästa månad',\n  // View navigation\n  openPreviousView: 'öppna föregående vy',\n  openNextView: 'öppna nästa vy',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'årsvyn är öppen, byt till kalendervy' : 'kalendervyn är öppen, byt till årsvy',\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Slut',\n  // Action bar\n  cancelButtonLabel: 'Avbryt',\n  clearButtonLabel: 'Rensa',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Idag',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'Ingen tid vald' : `Vald tid är ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} timmar`,\n  minutesClockNumberText: minutes => `${minutes} minuter`,\n  secondsClockNumberText: seconds => `${seconds} sekunder`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Välj datum, valt datum är ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Välj datum',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Välj tid, vald tid är ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Välj tid',\n  // Table labels\n  timeTableLabel: 'välj tid',\n  dateTableLabel: 'välj datum'\n};\nexport const svSE = getPickersLocalization(svSEPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC;AACA,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,kBAFG;EAGlBC,SAAS,EAAE,aAHO;EAIlB;EACAC,gBAAgB,EAAE,qBALA;EAMlBC,YAAY,EAAE,gBANI;EAOlBC,oCAAoC,EAAE,8CAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,MAAT,GAAkB,sCAAlB,GAA2D,sCAA/D;EAAA,CAPxB;EAQlB;EACAC,KAAK,EAAE,OATW;EAUlBC,GAAG,EAAE,MAVa;EAWlB;EACAC,iBAAiB,EAAE,QAZD;EAalBC,gBAAgB,EAAE,OAbA;EAclBC,aAAa,EAAE,IAdG;EAelBC,gBAAgB,EAAE,MAfA;EAgBlB;EACAC,cAAc,EAAE,wBAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb;IAAA,wBAAmCT,IAAnC,eAA4CQ,IAAI,KAAK,IAAT,GAAgB,gBAAhB,4BAAkDC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAlD,CAA5C;EAAA,CAjBE;EAkBlBG,oBAAoB,EAAE,8BAAAC,KAAK;IAAA,iBAAOA,KAAP;EAAA,CAlBT;EAmBlBC,sBAAsB,EAAE,gCAAAC,OAAO;IAAA,iBAAOA,OAAP;EAAA,CAnBb;EAoBlBC,sBAAsB,EAAE,gCAAAC,OAAO;IAAA,iBAAOA,OAAP;EAAA,CApBb;EAqBlB;EACAC,sBAAsB,EAAE,gCAACC,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,6CAA+EC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA/E,IAAkI,YAAvJ;EAAA,CAtBN;EAuBlBI,sBAAsB,EAAE,gCAACJ,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,yCAA2EC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA3E,IAA8H,UAAnJ;EAAA,CAvBN;EAwBlB;EACAK,cAAc,EAAE,UAzBE;EA0BlBC,cAAc,EAAE;AA1BE,CAApB;AA4BA,OAAO,IAAMC,IAAI,GAAGhC,sBAAsB,CAACC,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}