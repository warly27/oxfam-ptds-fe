{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization'; // maps ClockPickerView to its translation\n\nvar views = {\n  hours: 'Stunden',\n  minutes: 'Minuten',\n  seconds: 'Sekunden'\n};\nvar deDEPickers = {\n  // Calendar navigation\n  previousMonth: 'Letzter Monat',\n  nextMonth: 'Nächster Monat',\n  // View navigation\n  openPreviousView: 'Letzte Ansicht öffnen',\n  openNextView: 'Nächste Ansicht öffnen',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'Jahresansicht ist geöffnet, zur Kalenderansicht wechseln' : 'Kalenderansicht ist geöffnet, zur Jahresansicht wechseln';\n  },\n  // DateRange placeholders\n  start: 'Beginn',\n  end: 'Ende',\n  // Action bar\n  cancelButtonLabel: 'Abbrechen',\n  clearButtonLabel: 'Löschen',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Heute',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    var _views$view;\n\n    return \"\".concat((_views$view = views[view]) != null ? _views$view : view, \" ausw\\xE4hlen. \").concat(time === null ? 'Keine Uhrzeit ausgewählt' : \"Gew\\xE4hlte Uhrzeit ist \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" \").concat(views.hours);\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" \").concat(views.minutes);\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \"  \").concat(views.seconds);\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Datum ausw\\xE4hlen, gew\\xE4hltes Datum ist \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Datum auswählen';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Uhrzeit ausw\\xE4hlen, gew\\xE4hlte Uhrzeit ist \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Uhrzeit auswählen';\n  },\n  // Table labels\n  timeTableLabel: 'Uhrzeit auswählen',\n  dateTableLabel: 'Datum auswählen'\n};\nexport var deDE = getPickersLocalization(deDEPickers);","map":{"version":3,"names":["getPickersLocalization","views","hours","minutes","seconds","deDEPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","_views$view","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","deDE"],"sources":["/Users/wdelacruz/project_2021/matx-react/node_modules/@mui/x-date-pickers/locales/deDE.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\n// maps ClockPickerView to its translation\nconst views = {\n  hours: 'Stunden',\n  minutes: 'Minuten',\n  seconds: 'Sekunden'\n};\nconst deDEPickers = {\n  // Calendar navigation\n  previousMonth: 'Letzter Monat',\n  nextMonth: 'Nächster Monat',\n  // View navigation\n  openPreviousView: 'Letzte Ansicht öffnen',\n  openNextView: 'Nächste Ansicht öffnen',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'Jahresansicht ist geöffnet, zur Kalenderansicht wechseln' : 'Kalenderansicht ist geöffnet, zur Jahresansicht wechseln',\n  // DateRange placeholders\n  start: 'Beginn',\n  end: 'Ende',\n  // Action bar\n  cancelButtonLabel: 'Abbrechen',\n  clearButtonLabel: 'Löschen',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Heute',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => {\n    var _views$view;\n\n    return `${(_views$view = views[view]) != null ? _views$view : view} auswählen. ${time === null ? 'Keine Uhrzeit ausgewählt' : `Gewählte Uhrzeit ist ${adapter.format(time, 'fullTime')}`}`;\n  },\n  hoursClockNumberText: hours => `${hours} ${views.hours}`,\n  minutesClockNumberText: minutes => `${minutes} ${views.minutes}`,\n  secondsClockNumberText: seconds => `${seconds}  ${views.seconds}`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Datum auswählen, gewähltes Datum ist ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Datum auswählen',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Uhrzeit auswählen, gewählte Uhrzeit ist ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Uhrzeit auswählen',\n  // Table labels\n  timeTableLabel: 'Uhrzeit auswählen',\n  dateTableLabel: 'Datum auswählen'\n};\nexport const deDE = getPickersLocalization(deDEPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC,C,CACA;;AACA,IAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,SADK;EAEZC,OAAO,EAAE,SAFG;EAGZC,OAAO,EAAE;AAHG,CAAd;AAKA,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,eAFG;EAGlBC,SAAS,EAAE,gBAHO;EAIlB;EACAC,gBAAgB,EAAE,uBALA;EAMlBC,YAAY,EAAE,wBANI;EAOlBC,oCAAoC,EAAE,8CAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,MAAT,GAAkB,0DAAlB,GAA+E,0DAAnF;EAAA,CAPxB;EAQlB;EACAC,KAAK,EAAE,QATW;EAUlBC,GAAG,EAAE,MAVa;EAWlB;EACAC,iBAAiB,EAAE,WAZD;EAalBC,gBAAgB,EAAE,SAbA;EAclBC,aAAa,EAAE,IAdG;EAelBC,gBAAgB,EAAE,OAfA;EAgBlB;EACAC,cAAc,EAAE,wBAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb,EAAyB;IACvC,IAAIC,WAAJ;;IAEA,iBAAU,CAACA,WAAW,GAAGpB,KAAK,CAACU,IAAD,CAApB,KAA+B,IAA/B,GAAsCU,WAAtC,GAAoDV,IAA9D,4BAAiFQ,IAAI,KAAK,IAAT,GAAgB,0BAAhB,qCAAqEC,OAAO,CAACE,MAAR,CAAeH,IAAf,EAAqB,UAArB,CAArE,CAAjF;EACD,CArBiB;EAsBlBI,oBAAoB,EAAE,8BAAArB,KAAK;IAAA,iBAAOA,KAAP,cAAgBD,KAAK,CAACC,KAAtB;EAAA,CAtBT;EAuBlBsB,sBAAsB,EAAE,gCAAArB,OAAO;IAAA,iBAAOA,OAAP,cAAkBF,KAAK,CAACE,OAAxB;EAAA,CAvBb;EAwBlBsB,sBAAsB,EAAE,gCAAArB,OAAO;IAAA,iBAAOA,OAAP,eAAmBH,KAAK,CAACG,OAAzB;EAAA,CAxBb;EAyBlB;EACAsB,sBAAsB,EAAE,gCAACC,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,wDAA0FC,KAAK,CAACN,MAAN,CAAaM,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA1F,IAA6I,iBAAlK;EAAA,CA1BN;EA2BlBI,sBAAsB,EAAE,gCAACJ,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,2DAA6FC,KAAK,CAACN,MAAN,CAAaM,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA7F,IAAgJ,mBAArK;EAAA,CA3BN;EA4BlB;EACAK,cAAc,EAAE,mBA7BE;EA8BlBC,cAAc,EAAE;AA9BE,CAApB;AAgCA,OAAO,IAAMC,IAAI,GAAGlC,sBAAsB,CAACK,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}