{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization'; // import { CalendarPickerView } from '../internals/models';\n// This object is not Partial<PickersLocaleText> because it is the default values\n\nvar trTRPickers = {\n  // Calendar navigation\n  previousMonth: 'Önceki ay',\n  nextMonth: 'Sonraki ay',\n  // View navigation\n  openPreviousView: 'sonraki görünüm',\n  openNextView: 'önceki görünüm',\n  // calendarViewSwitchingButtonAriaLabel: (view: CalendarPickerView) => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  // DateRange placeholders\n  start: 'Başlangıç',\n  end: 'Bitiş',\n  // Action bar\n  cancelButtonLabel: 'iptal',\n  clearButtonLabel: 'Temizle',\n  okButtonLabel: 'Tamam',\n  todayButtonLabel: 'Bugün' // Clock labels\n  // clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`}`,\n  // hoursClockNumberText: hours => `${hours} hours`,\n  // minutesClockNumberText: minutes => `${minutes} minutes`,\n  // secondsClockNumberText: seconds => `${seconds} seconds`,\n  // Open picker labels\n  // openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose date, selected date is ${utils.format(utils.date(rawValue)!, 'fullDate')}` : 'Choose date',\n  // openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose time, selected time is ${utils.format(utils.date(rawValue)!, 'fullTime')}` : 'Choose time',\n  // Table labels\n  // timeTableLabel: 'pick time',\n  // dateTableLabel: 'pick date',\n\n};\nexport var trTR = getPickersLocalization(trTRPickers);","map":{"version":3,"names":["getPickersLocalization","trTRPickers","previousMonth","nextMonth","openPreviousView","openNextView","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","trTR"],"sources":["/Users/wdelacruz/project_2021/matx-react/node_modules/@mui/x-date-pickers/locales/trTR.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization'; // import { CalendarPickerView } from '../internals/models';\n// This object is not Partial<PickersLocaleText> because it is the default values\n\nconst trTRPickers = {\n  // Calendar navigation\n  previousMonth: 'Önceki ay',\n  nextMonth: 'Sonraki ay',\n  // View navigation\n  openPreviousView: 'sonraki görünüm',\n  openNextView: 'önceki görünüm',\n  // calendarViewSwitchingButtonAriaLabel: (view: CalendarPickerView) => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  // DateRange placeholders\n  start: 'Başlangıç',\n  end: 'Bitiş',\n  // Action bar\n  cancelButtonLabel: 'iptal',\n  clearButtonLabel: 'Temizle',\n  okButtonLabel: 'Tamam',\n  todayButtonLabel: 'Bugün' // Clock labels\n  // clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`}`,\n  // hoursClockNumberText: hours => `${hours} hours`,\n  // minutesClockNumberText: minutes => `${minutes} minutes`,\n  // secondsClockNumberText: seconds => `${seconds} seconds`,\n  // Open picker labels\n  // openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose date, selected date is ${utils.format(utils.date(rawValue)!, 'fullDate')}` : 'Choose date',\n  // openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose time, selected time is ${utils.format(utils.date(rawValue)!, 'fullTime')}` : 'Choose time',\n  // Table labels\n  // timeTableLabel: 'pick time',\n  // dateTableLabel: 'pick date',\n\n};\nexport const trTR = getPickersLocalization(trTRPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC,C,CAAyE;AACzE;;AAEA,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,WAFG;EAGlBC,SAAS,EAAE,YAHO;EAIlB;EACAC,gBAAgB,EAAE,iBALA;EAMlBC,YAAY,EAAE,gBANI;EAOlB;EACA;EACAC,KAAK,EAAE,WATW;EAUlBC,GAAG,EAAE,OAVa;EAWlB;EACAC,iBAAiB,EAAE,OAZD;EAalBC,gBAAgB,EAAE,SAbA;EAclBC,aAAa,EAAE,OAdG;EAelBC,gBAAgB,EAAE,OAfA,CAeQ;EAC1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAzBkB,CAApB;AA4BA,OAAO,IAAMC,IAAI,GAAGZ,sBAAsB,CAACC,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}