{"ast":null,"code":"import _slicedToArray from \"/Users/wdelacruz/project_2021/matx-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/wdelacruz/project_2021/matx-react/src/app/views/participants/Sample.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { TableCell, TableRow } from '@material-ui/core'; // const styles = (theme = {\n//   root: {}\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar columns = [{\n  name: 'userId',\n  label: 'User Id',\n  options: {\n    filter: true\n  }\n}, {\n  name: 'title',\n  label: 'Title',\n  options: {\n    filter: true\n  }\n}, {\n  name: 'body',\n  label: 'Body',\n  options: {\n    filter: true\n  }\n}];\n\nvar Sample = function Sample(props) {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      comments = _useState2[1]; // componentDidMount() {\n  //   const url = \"https://jsonplaceholder.typicode.com/posts\";\n  //   const getDatas = fetch(url)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       this.setState({ data: data });\n  //     })\n  //     .catch(err => console.log(\"error:\", err));\n  // }\n\n\n  var handleClick = function handleClick(value) {\n    console.log('value', value);\n    var id = value.id;\n    var url = \"https://jsonplaceholder.typicode.com/posts/\".concat(id, \"/comments\");\n    var getComments = fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      _this.setState({\n        comments: data\n      });\n    }).catch(function (err) {\n      return console.log('error:', err);\n    });\n  };\n\n  console.log('comments', comments);\n  var options = {\n    filterType: 'textField',\n    fixedHeader: true,\n    sort: true,\n    search: true,\n    selectableRows: 'multiple',\n    responsive: 'scrollMaxHeight',\n    rowsPerPage: 15,\n    rowHove: true,\n    selectableRowsHeader: false,\n    expandableRows: true,\n    expandableRowsOnClick: true,\n    renderExpandableRow: function renderExpandableRow(rowData, rowMeta) {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          colSpan: 6,\n          className: classes.expandRow,\n          children: _this.state.comments && JSON.stringify(_this.state.comments)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, _this);\n    },\n    onRowsClick: function onRowsClick(rowData, rowMeta) {\n      console.log('rowData', rowData);\n\n      _this.handleClick(_this.state.data[rowMeta.dataIndex]);\n    },\n    onRowsExpand: function onRowsExpand(curExpanded, allExpanded) {\n      console.log('rowExpand', curExpanded, allExpanded[0]);\n\n      _this.handleClick(_this.state.data[allExpanded[0].dataIndex]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data && /*#__PURE__*/_jsxDEV(MUIDataTable, {\n      title: 'Sample',\n      data: data,\n      columns: columns,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 16\n    }, _this)\n  }, void 0, false);\n};\n\n_s(Sample, \"215BYICKmNrwNMEtv2I4XZ8n3l8=\");\n\n_c = Sample;\nexport default Sample;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sample\");","map":{"version":3,"names":["React","useState","PropTypes","classNames","withStyles","MUIDataTable","TableCell","TableRow","columns","name","label","options","filter","Sample","props","data","comments","handleClick","value","console","log","id","url","getComments","fetch","then","res","json","setState","catch","err","filterType","fixedHeader","sort","search","selectableRows","responsive","rowsPerPage","rowHove","selectableRowsHeader","expandableRows","expandableRowsOnClick","renderExpandableRow","rowData","rowMeta","classes","expandRow","state","JSON","stringify","onRowsClick","dataIndex","onRowsExpand","curExpanded","allExpanded"],"sources":["/Users/wdelacruz/project_2021/matx-react/src/app/views/participants/Sample.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { TableCell, TableRow } from '@material-ui/core';\n\n// const styles = (theme = {\n//   root: {}\n// });\n\nconst columns = [\n  {\n    name: 'userId',\n    label: 'User Id',\n    options: {\n      filter: true,\n    },\n  },\n  {\n    name: 'title',\n    label: 'Title',\n    options: {\n      filter: true,\n    },\n  },\n  {\n    name: 'body',\n    label: 'Body',\n    options: {\n      filter: true,\n    },\n  },\n];\n\nconst Sample = (props) => {\n  const [data, comments] = useState();\n  // componentDidMount() {\n  //   const url = \"https://jsonplaceholder.typicode.com/posts\";\n  //   const getDatas = fetch(url)\n  //     .then(res => res.json())\n  //     .then(data => {\n  //       this.setState({ data: data });\n  //     })\n  //     .catch(err => console.log(\"error:\", err));\n  // }\n\n  const handleClick = (value) => {\n    console.log('value', value);\n    const { id } = value;\n    const url = `https://jsonplaceholder.typicode.com/posts/${id}/comments`;\n    const getComments = fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        this.setState({ comments: data });\n      })\n      .catch((err) => console.log('error:', err));\n  };\n\n  console.log('comments', comments);\n  const options = {\n    filterType: 'textField',\n    fixedHeader: true,\n    sort: true,\n    search: true,\n    selectableRows: 'multiple',\n    responsive: 'scrollMaxHeight',\n    rowsPerPage: 15,\n    rowHove: true,\n    selectableRowsHeader: false,\n    expandableRows: true,\n    expandableRowsOnClick: true,\n    renderExpandableRow: (rowData, rowMeta) => {\n      return (\n        <TableRow>\n          <TableCell colSpan={6} className={classes.expandRow}>\n            {this.state.comments && JSON.stringify(this.state.comments)}\n          </TableCell>\n        </TableRow>\n      );\n    },\n    onRowsClick: (rowData, rowMeta) => {\n      console.log('rowData', rowData);\n      this.handleClick(this.state.data[rowMeta.dataIndex]);\n    },\n    onRowsExpand: (curExpanded, allExpanded) => {\n      console.log('rowExpand', curExpanded, allExpanded[0]);\n      this.handleClick(this.state.data[allExpanded[0].dataIndex]);\n    },\n  };\n\n  return (\n    <>{data && <MUIDataTable title={'Sample'} data={data} columns={columns} options={options} />}</>\n  );\n};\n\nexport default Sample;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}