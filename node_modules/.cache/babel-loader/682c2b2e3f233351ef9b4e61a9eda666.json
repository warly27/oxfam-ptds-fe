{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar nbNOPickers = {\n  // Calendar navigation\n  previousMonth: 'Forrige måned',\n  nextMonth: 'Neste måned',\n  // View navigation\n  openPreviousView: 'åpne forrige visning',\n  openNextView: 'åpne neste visning',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'årsvisning er åpen, bytt til kalendervisning' : 'kalendervisning er åpen, bytt til årsvisning';\n  },\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Slutt',\n  // Action bar\n  cancelButtonLabel: 'Avbryt',\n  clearButtonLabel: 'Fjern',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'I dag',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Velg \".concat(view, \". \").concat(time === null ? 'Ingen tid valgt' : \"Valgt tid er \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" timer\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" minutter\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" sekunder\");\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Velg dato, valgt dato er \".concat(utils.format(utils.date(rawValue), 'fullDate')) : 'Velg dato';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(rawValue, utils) {\n    return rawValue && utils.isValid(utils.date(rawValue)) ? \"Velg tid, valgt tid er \".concat(utils.format(utils.date(rawValue), 'fullTime')) : 'Velg tid';\n  },\n  // Table labels\n  timeTableLabel: 'velg tid',\n  dateTableLabel: 'velg dato'\n};\nexport var nbNO = getPickersLocalization(nbNOPickers);","map":{"version":3,"names":["getPickersLocalization","nbNOPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","nbNO"],"sources":["/Users/wdelacruz/project_2021/matx-react/node_modules/@mui/x-date-pickers/locales/nbNO.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst nbNOPickers = {\n  // Calendar navigation\n  previousMonth: 'Forrige måned',\n  nextMonth: 'Neste måned',\n  // View navigation\n  openPreviousView: 'åpne forrige visning',\n  openNextView: 'åpne neste visning',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'årsvisning er åpen, bytt til kalendervisning' : 'kalendervisning er åpen, bytt til årsvisning',\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Slutt',\n  // Action bar\n  cancelButtonLabel: 'Avbryt',\n  clearButtonLabel: 'Fjern',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'I dag',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Velg ${view}. ${time === null ? 'Ingen tid valgt' : `Valgt tid er ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} timer`,\n  minutesClockNumberText: minutes => `${minutes} minutter`,\n  secondsClockNumberText: seconds => `${seconds} sekunder`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Velg dato, valgt dato er ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Velg dato',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Velg tid, valgt tid er ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Velg tid',\n  // Table labels\n  timeTableLabel: 'velg tid',\n  dateTableLabel: 'velg dato'\n};\nexport const nbNO = getPickersLocalization(nbNOPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC;AACA,IAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,eAFG;EAGlBC,SAAS,EAAE,aAHO;EAIlB;EACAC,gBAAgB,EAAE,sBALA;EAMlBC,YAAY,EAAE,oBANI;EAOlBC,oCAAoC,EAAE,8CAAAC,IAAI;IAAA,OAAIA,IAAI,KAAK,MAAT,GAAkB,8CAAlB,GAAmE,8CAAvE;EAAA,CAPxB;EAQlB;EACAC,KAAK,EAAE,OATW;EAUlBC,GAAG,EAAE,OAVa;EAWlB;EACAC,iBAAiB,EAAE,QAZD;EAalBC,gBAAgB,EAAE,OAbA;EAclBC,aAAa,EAAE,IAdG;EAelBC,gBAAgB,EAAE,OAfA;EAgBlB;EACAC,cAAc,EAAE,wBAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb;IAAA,sBAAiCT,IAAjC,eAA0CQ,IAAI,KAAK,IAAT,GAAgB,iBAAhB,0BAAoDC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAApD,CAA1C;EAAA,CAjBE;EAkBlBG,oBAAoB,EAAE,8BAAAC,KAAK;IAAA,iBAAOA,KAAP;EAAA,CAlBT;EAmBlBC,sBAAsB,EAAE,gCAAAC,OAAO;IAAA,iBAAOA,OAAP;EAAA,CAnBb;EAoBlBC,sBAAsB,EAAE,gCAAAC,OAAO;IAAA,iBAAOA,OAAP;EAAA,CApBb;EAqBlB;EACAC,sBAAsB,EAAE,gCAACC,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,sCAA8EC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA9E,IAAiI,WAAtJ;EAAA,CAtBN;EAuBlBI,sBAAsB,EAAE,gCAACJ,QAAD,EAAWC,KAAX;IAAA,OAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,oCAA4EC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA5E,IAA+H,UAApJ;EAAA,CAvBN;EAwBlB;EACAK,cAAc,EAAE,UAzBE;EA0BlBC,cAAc,EAAE;AA1BE,CAApB;AA4BA,OAAO,IAAMC,IAAI,GAAGhC,sBAAsB,CAACC,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}