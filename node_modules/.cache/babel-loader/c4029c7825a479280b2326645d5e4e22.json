{"ast":null,"code":"import _slicedToArray from \"/Users/wdelacruz/project_2021/matx-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/wdelacruz/project_2021/matx-react/src/app/views/participants/test.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider, createTheme, List, ListItemText } from '@mui/material';\nimport MUIDataTable from 'mui-datatables';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, FormLabel, FormGroup } from '@mui/material'; // const data = [\n//   {\n//     cartItems: [\n//       {\n//         color: 'Black',\n//         size: 20,\n//         quantity: 2,\n//         name: 'Item 1',\n//       },\n//     ],\n//     Address: 'France',\n//     firstName: 'Anna',\n//   },\n//   {\n//     firstName: 'Anna',\n//     Address: 'US',\n//     cartItems: [\n//       {\n//         size: '500',\n//         color: 'Green',\n//         name: 'Item 1',\n//         quantity: 2,\n//       },\n//       {\n//         name: 'Tumbler',\n//         color: 'Black',\n//         size: '500',\n//         quantity: 1,\n//       },\n//       {\n//         color: 'Pink',\n//         quantity: 1,\n//         size: '500',\n//         name: 'Tumbler',\n//       },\n//       {\n//         size: 'XL',\n//         color: 'Pink',\n//         quantity: 1,\n//         name: 'Shirt',\n//       },\n//       {\n//         size: 'XL',\n//         color: 'Green',\n//         name: 'Shirt',\n//         quantity: 1,\n//         price: 500,\n//       },\n//     ],\n//   },\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Test = function Test() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var url = 'https://jsonplaceholder.typicode.com/posts';\n    var getDatas = fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      // this.setState({ data: data });\n      setData(data);\n    }).catch(function (err) {\n      return console.log('error:', err);\n    });\n  }, [setData]);\n  var columns = [{\n    name: 'userId',\n    label: 'User Id',\n    options: {\n      filter: true\n    }\n  }, {\n    name: 'title',\n    label: 'Title',\n    options: {\n      filter: true\n    }\n  }, {\n    name: 'body',\n    label: 'Body',\n    options: {\n      filter: true\n    }\n  } // {\n  //   name: 'cartItems',\n  //   label: 'Items',\n  //   options: {\n  //     filter: true,\n  //     sort: true,\n  //     customBodyRender: (value, tableMeta, updateValue) => {\n  //       return Object.entries(\n  //         value.reduce((prev, item) => {\n  //           if (!prev[item.id]) prev[item.id] = { ...item, nest: [] };\n  //           prev[item.id].nest.push(item);\n  //           return prev;\n  //         }, {})\n  //       );\n  //         .map(([id, obj], idx) => (\n  //           <ul key={id + obj.color}>\n  //             <ListItemText primary={obj.name + ' ' + obj.size} />\n  //             <li>\n  //               {obj.nest.map((nest, idx) => (\n  //                 <li key={idx}>\n  //                   <ListItemText secondary={nest.color + ' (' + nest.quantity + ' pcs)'} />\n  //                 </li>\n  //               ))}\n  //             </li>\n  //           </ul>\n  //         ));\n  //     },\n  //   },\n  // },\n  ];\n  var options = {\n    filter: true,\n    selectableRows: 'none',\n    responsive: 'scrollMaxHeight',\n    expandableRows: true,\n    renderExpandableRow: function renderExpandableRow(rowData, rowMeta) {\n      console.log(rowData);\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: 4,\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              style: {\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"left\",\n                  children: \"Body\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: rowData.map(function (row) {\n                  console.log(row);\n                  console.log(rowData);\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: /*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      align: \"left\",\n                      children: row.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 25\n                    }, _this)\n                  }, row.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 23\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, _this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: createTheme(),\n      children: /*#__PURE__*/_jsxDEV(MUIDataTable, {\n        title: 'Participants',\n        options: options,\n        columns: columns,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Test, \"WZ2PO9A64oHRexE1CE+yX3ebuoA=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","ThemeProvider","createTheme","List","ListItemText","MUIDataTable","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","FormLabel","FormGroup","Test","data","setData","url","getDatas","fetch","then","res","json","catch","err","console","log","columns","name","label","options","filter","selectableRows","responsive","expandableRows","renderExpandableRow","rowData","rowMeta","margin","map","row","id"],"sources":["/Users/wdelacruz/project_2021/matx-react/src/app/views/participants/test.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ThemeProvider, createTheme, List, ListItemText } from '@mui/material';\nimport MUIDataTable from 'mui-datatables';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  TextField,\n  FormLabel,\n  FormGroup,\n} from '@mui/material';\n\n// const data = [\n//   {\n//     cartItems: [\n//       {\n//         color: 'Black',\n//         size: 20,\n//         quantity: 2,\n//         name: 'Item 1',\n//       },\n//     ],\n//     Address: 'France',\n//     firstName: 'Anna',\n//   },\n//   {\n//     firstName: 'Anna',\n//     Address: 'US',\n//     cartItems: [\n//       {\n//         size: '500',\n//         color: 'Green',\n//         name: 'Item 1',\n//         quantity: 2,\n//       },\n//       {\n//         name: 'Tumbler',\n//         color: 'Black',\n\n//         size: '500',\n//         quantity: 1,\n//       },\n//       {\n//         color: 'Pink',\n//         quantity: 1,\n\n//         size: '500',\n//         name: 'Tumbler',\n//       },\n//       {\n//         size: 'XL',\n//         color: 'Pink',\n\n//         quantity: 1,\n//         name: 'Shirt',\n//       },\n//       {\n//         size: 'XL',\n//         color: 'Green',\n\n//         name: 'Shirt',\n//         quantity: 1,\n//         price: 500,\n//       },\n//     ],\n//   },\n// ];\n\nconst Test = () => {\n  const [data, setData] = useState();\n  useEffect(() => {\n    const url = 'https://jsonplaceholder.typicode.com/posts';\n    const getDatas = fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        // this.setState({ data: data });\n        setData(data);\n      })\n      .catch((err) => console.log('error:', err));\n  }, [setData]);\n  const columns = [\n    {\n      name: 'userId',\n      label: 'User Id',\n      options: {\n        filter: true,\n      },\n    },\n    {\n      name: 'title',\n      label: 'Title',\n      options: {\n        filter: true,\n      },\n    },\n    {\n      name: 'body',\n      label: 'Body',\n      options: {\n        filter: true,\n      },\n    },\n    // {\n    //   name: 'cartItems',\n    //   label: 'Items',\n    //   options: {\n    //     filter: true,\n    //     sort: true,\n    //     customBodyRender: (value, tableMeta, updateValue) => {\n    //       return Object.entries(\n    //         value.reduce((prev, item) => {\n    //           if (!prev[item.id]) prev[item.id] = { ...item, nest: [] };\n    //           prev[item.id].nest.push(item);\n    //           return prev;\n    //         }, {})\n    //       );\n    //         .map(([id, obj], idx) => (\n    //           <ul key={id + obj.color}>\n    //             <ListItemText primary={obj.name + ' ' + obj.size} />\n\n    //             <li>\n    //               {obj.nest.map((nest, idx) => (\n    //                 <li key={idx}>\n    //                   <ListItemText secondary={nest.color + ' (' + nest.quantity + ' pcs)'} />\n    //                 </li>\n    //               ))}\n    //             </li>\n    //           </ul>\n    //         ));\n    //     },\n    //   },\n    // },\n  ];\n\n  const options = {\n    filter: true,\n    selectableRows: 'none',\n    responsive: 'scrollMaxHeight',\n    expandableRows: true,\n    renderExpandableRow: (rowData, rowMeta) => {\n      console.log(rowData);\n      return (\n        <tr>\n          <td colSpan={4}>\n            <TableContainer>\n              <Table style={{ margin: '0 auto' }}>\n                <TableHead>\n                  <TableCell align=\"left\">Body</TableCell>\n                  {/* <TableCell align=\"right\">Color</TableCell>\n                  <TableCell align=\"right\">Size</TableCell> */}\n                </TableHead>\n                <TableBody>\n                  {rowData.map((row) => {\n                    console.log(row);\n                    console.log(rowData);\n                    return (\n                      <TableRow key={row.id}>\n                        <TableCell component=\"th\" scope=\"row\" align=\"left\">\n                          {row.id}\n                        </TableCell>\n                        {/* <TableCell align=\"right\">{row.color}</TableCell>\n                        <TableCell align=\"right\">{row.size}</TableCell> */}\n                      </TableRow>\n                    );\n                  })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </td>\n        </tr>\n      );\n    },\n  };\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={createTheme()}>\n        {/* total amount of the current page: {total} */}\n        <MUIDataTable title={'Participants'} options={options} columns={columns} data={data} />\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}